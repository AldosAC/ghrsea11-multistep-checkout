class SignUpView extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: '',
      password: ''
    };
    this.onChangeHandler = this.onChangeHandler.bind(this);
    this.onSubmitHandler = this.onSubmitHandler.bind(this);
  }

  onChangeHandler(event) {
    let {
      name,
      value
    } = event.target;
    this.setState({
      [name]: value
    });
  }

  onSubmitHandler(event) {}

  render() {
    let {
      name,
      email,
      password
    } = this.state;
    return /*#__PURE__*/React.createElement("form", null, /*#__PURE__*/React.createElement("label", {
      value: "Name"
    }), /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "name",
      onChange: this.onChangeHandler,
      value: name
    }), /*#__PURE__*/React.createElement("label", {
      value: "Email"
    }), /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "email",
      onChange: this.onChangeHandler,
      value: email
    }), /*#__PURE__*/React.createElement("label", {
      value: "Email"
    }), /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "password",
      onChange: this.onChangeHandler,
      value: password
    }));
  }

}

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      view: "index"
    };
    this.toSignUpView = this.toSignUpView.bind(this);
    this.toShippingView = this.toShippingView.bind(this);
    this.toBillingView = this.toBillingView.bind(this);
    this.completeOrder = this.completeOrder.bind(this);
  }

  toSignUpView(event) {
    this.setState({
      view: "sign-up"
    });
  }

  toShippingView(event) {
    this.setState({
      view: "shipping"
    });
  }

  toBillingView(event) {
    this.setState({
      view: "billing"
    });
  }

  completeOrder(event) {
    this.setState({
      view: "index"
    });
  }

  renderView() {
    let {
      view
    } = this.state;

    if (view === "index") {
      return /*#__PURE__*/React.createElement("button", {
        onClick: this.toSignUpView
      }, "Checkout");
    } else if (view === "sign-up") {
      return /*#__PURE__*/React.createElement(SignUpView, {
        toNext: this.toShippingView
      });
    } else if (view === "shipping") {
      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Shipping Infortmation"), /*#__PURE__*/React.createElement("button", {
        onClick: this.toBillingView
      }, "Next"));
    } else if (view === "billing") {
      return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("h1", null, "Billing Information"), /*#__PURE__*/React.createElement("button", {
        onClick: this.completeOrder
      }, "Place Order"));
    }
  }

  render() {
    return this.renderView();
  }

}

;
ReactDOM.render( /*#__PURE__*/React.createElement(App, null), document.getElementById("app"));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL2NsaWVudC9hcHAuanN4Il0sIm5hbWVzIjpbIlNpZ25VcFZpZXciLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsIm5hbWUiLCJlbWFpbCIsInBhc3N3b3JkIiwib25DaGFuZ2VIYW5kbGVyIiwiYmluZCIsIm9uU3VibWl0SGFuZGxlciIsImV2ZW50IiwidmFsdWUiLCJ0YXJnZXQiLCJzZXRTdGF0ZSIsInJlbmRlciIsIkFwcCIsInZpZXciLCJ0b1NpZ25VcFZpZXciLCJ0b1NoaXBwaW5nVmlldyIsInRvQmlsbGluZ1ZpZXciLCJjb21wbGV0ZU9yZGVyIiwicmVuZGVyVmlldyIsIlJlYWN0RE9NIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsVUFBTixTQUF5QkMsS0FBSyxDQUFDQyxTQUEvQixDQUF5QztBQUN2Q0MsRUFBQUEsV0FBVyxDQUFFQyxLQUFGLEVBQVM7QUFDbEIsVUFBTUEsS0FBTjtBQUNBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxJQUFJLEVBQUUsRUFESztBQUVYQyxNQUFBQSxLQUFLLEVBQUUsRUFGSTtBQUdYQyxNQUFBQSxRQUFRLEVBQUU7QUFIQyxLQUFiO0FBTUEsU0FBS0MsZUFBTCxHQUF1QixLQUFLQSxlQUFMLENBQXFCQyxJQUFyQixDQUEwQixJQUExQixDQUF2QjtBQUNBLFNBQUtDLGVBQUwsR0FBdUIsS0FBS0EsZUFBTCxDQUFxQkQsSUFBckIsQ0FBMEIsSUFBMUIsQ0FBdkI7QUFDRDs7QUFFREQsRUFBQUEsZUFBZSxDQUFDRyxLQUFELEVBQVE7QUFDckIsUUFBSTtBQUFFTixNQUFBQSxJQUFGO0FBQVFPLE1BQUFBO0FBQVIsUUFBa0JELEtBQUssQ0FBQ0UsTUFBNUI7QUFDQSxTQUFLQyxRQUFMLENBQWM7QUFBRSxPQUFDVCxJQUFELEdBQVFPO0FBQVYsS0FBZDtBQUNEOztBQUVERixFQUFBQSxlQUFlLENBQUNDLEtBQUQs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QUM3QiwwQkFDRSw4Q0FDRSxzREFERixlQUVFO0FBQVEsUUFBQSxPQUFPLEVBQUUsS0FBS0k7QUFBdEIsdUJBRkYsQ0FERjtBQU1EO0FBQ0Y7O0FBRUROLEVBQUFBLE1BQU0sR0FBSTtBQUNSLFdBQU8sS0FBS08sVUFBTCxFQUFQO0FBQ0Q7O0FBN0QrQjs7QUE4RGpDO0FBRURDLFFBQVEsQ0FBQ1IsTUFBVCxlQUFnQixvQkFBQyxHQUFELE9BQWhCLEVBQXlCUyxRQUFRLENBQUNDLGNBQVQsQ0FBd0IsS0FBeEIsQ0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTaWduVXBWaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IgKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBuYW1lOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIHBhc3N3b3JkOiAnJyxcbiAgICB9XG5cbiAgICB0aGlzLm9uQ2hhbmdlSGFuZGxlciA9IHRoaXMub25DaGFuZ2VIYW5kbGVyLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vblN1Ym1pdEhhbmRsZXIgPSB0aGlzLm9uU3VibWl0SGFuZGxlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgb25DaGFuZ2VIYW5kbGVyKGV2ZW50KSB7XG4gICAgbGV0IHsgbmFtZSwgdmFsdWUgfSA9IGV2ZW50LnRhcmdldDtcbiAgICB0aGlzLnNldFN0YXRlKHsgW25hbWVdOiB2YWx1ZSB9KTtcbiAgfVxuXG4gIG9uU3VibWl0SGFuZGxlcihldmVudCkge1xuXG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIGxldCB7IG5hbWUsIGVtYWlsLCBwYXNzd29yZCB9ID0gdGhpcy5zdGF0ZTtcblxuICAgIHJldHVybiAoXG4gICAgPGZvcm0+XG4gICAgICA8bGFiZWwgdmFsdWU9XCJOYW1lXCIgLz5cbiAgICAgIDxpbnB1dCBcbiAgICAgIHR5cGU9XCJ0ZXh0XCIgXG4gICAgICBuYW1lPVwibmFtZVwiXG4gICAgICBvbkNoYW5nZT17dGhpcy5vbkNoYW5nZUhhbmRsZXJ9IFxuICAgICAgdmFsdWU9e25hbWV9XG4gICAgICAvPlxuXG4gICAgICA8bGFiZWwgdmFsdWU9XCJFbWFpbFwiIC8+XG4gICAgICA8aW5wdXQgXG4gICAgICB0eXBlPVwidGV4dFwiIFxuICAgICAgbmFtZT1cImVtYWlsXCJcbiAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlSGFuZGxlcn0gXG4gICAgICB2YWx1ZT17ZW1haWx9XG4gICAgICAvPlxuXG4gICAgICA8bGFiZWwgdmFsdWU9XCJFbWFpbFwiIC8+XG4gICAgICA8aW5wdXQgXG4gICAgICB0eXBlPVwidGV4dFwiIFxuICAgICAgbmFtZT1cInBhc3N3b3JkXCJcbiAgICAgIG9uQ2hhbmdlPXt0aGlzLm9uQ2hhbmdlSGFuZGxlcn0gXG4gICAgICB2YWx1ZT17cGFzc3dvcmR9XG4gICAgICAvPlxuXG5cbiAgICA8L2Zvcm0+XG4gICAgKTtcbiAgfVxuXG59XG5cbmNsYXNzIEFwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yIChwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgdmlldzogXCJpbmRleFwiXG4gICAgfVxuICAgIHRoaXMudG9TaWduVXBWaWV3ID0gdGhpcy50b1NpZ25VcFZpZXcuYmluZCh0aGlzKTtcbiAgICB0aGlzLnRvU2hpcHBpbmdWaWV3ID0gdGhpcy50b1NoaXBwaW5nVmlldy5iaW5kKHRoaXMpO1xuICAgIHRoaXMudG9CaWxsaW5nVmlldyA9IHRoaXMudG9CaWxsaW5nVmlldy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuY29tcGxldGVPcmRlciA9IHRoaXMuY29tcGxldGVPcmRlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdG9TaWduVXBWaWV3KGV2ZW50KSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZpZXc6IFwic2lnbi11cFwifSlcbiAgfVxuXG4gIHRvU2hpcHBpbmdWaWV3KGV2ZW50KSB7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgdmlldzogXCJzaGlwcGluZ1wiIH0pXG4gIH1cblxuICB0b0JpbGxpbmdWaWV3KGV2ZW50KSB7XG4gICAgXG4gICAgdGhpcy5zZXRTdGF0ZSh7IHZpZXc6IFwiYmlsbGluZ1wiIH0pXG4gIH1cblxuICBjb21wbGV0ZU9yZGVyKGV2ZW50KSB7XG5cbiAgICB0aGlzLnNldFN0YXRlKHsgdmlldzogXCJpbmRleFwiIH0pXG4gIH1cblxuICByZW5kZXJWaWV3KCkge1xuICAgIGxldCB7IHZpZXcgfSA9IHRoaXMuc3RhdGU7XG5cbiAgICBpZiAodmlldyA9PT0gXCJpbmRleFwiKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e3RoaXMudG9TaWduVXBWaWV3fSA+Q2hlY2tvdXQ8L2J1dHRvbj5cbiAgICAgIClcbiAgICB9IGVsc2UgaWYgKHZpZXcgPT09IFwic2lnbi11cFwiKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8U2lnblVwVmlldyB0b05leHQ9e3RoaXMudG9TaGlwcGluZ1ZpZXd9IC8+XG4gICAgICApXG4gICAgfSBlbHNlIGlmICh2aWV3ID09PSBcInNoaXBwaW5nXCIpIHtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIDxkaXY+XG4gICAgICAgICAgPGgxPlNoaXBwaW5nIEluZm9ydG1hdGlvbjwvaDE+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLnRvQmlsbGluZ1ZpZXd9Pk5leHQ8L2J1dHRvbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICApXG4gICAgfSBlbHNlIGlmICh2aWV3ID09PSBcImJpbGxpbmdcIikge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8aDE+QmlsbGluZyBJbmZvcm1hdGlvbjwvaDE+XG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXt0aGlzLmNvbXBsZXRlT3JkZXJ9PlBsYWNlIE9yZGVyPC9idXR0b24+XG4gICAgICAgIDwvZGl2PlxuICAgICAgKVxuICAgIH1cbiAgfVxuXG4gIHJlbmRlciAoKSB7XG4gICAgcmV0dXJuIHRoaXMucmVuZGVyVmlldygpO1xuICB9XG59O1xuXG5SZWFjdERPTS5yZW5kZXIoPEFwcCAvPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIikpOyJdfQ==